{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador de Microsoft (R) Visual C#",
        "version": "4.3.0.0",
        "fileVersion": "4.3.0-3.22470.13 (80a8ce8d)",
        "semanticVersion": "4.3.0",
        "language": "es-MX"
      },
      "results": [
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/sebtr/OneDrive/Escritorio/Parlis/Parlis.Server/Parlis.Server.Service/Constants.cs",
                "region": {
                  "startLine": 3,
                  "startColumn": 18,
                  "endLine": 3,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3597",
          "level": "warning",
          "message": "Add the 'ServiceContract' attribute to  this class.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/sebtr/OneDrive/Escritorio/Parlis/Parlis.Server/Parlis.Server.Service/Data/Message.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'PlayerProfile' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/sebtr/OneDrive/Escritorio/Parlis/Parlis.Server/Parlis.Server.Service/Data/PlayerProfile.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4035",
          "level": "warning",
          "message": "Seal class 'Player' or implement 'IEqualityComparer<T>' instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/sebtr/OneDrive/Escritorio/Parlis/Parlis.Server/Parlis.Server.Service/Data/Player.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Utility classes, which are collections of static members, are not meant to be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3597": {
          "id": "S3597",
          "shortDescription": "\"ServiceContract\" and \"OperationContract\" attributes should be used together",
          "fullDescription": "The ServiceContract attribute specifies that a class or interface defines the communication contract of a Windows Communication Foundation (WCF) service. The service operations of this class or interface are defined by OperationContract attributes added to methods. It doesnâ€™t make sense to define a contract without any service operations; thus, in a ServiceContract class or interface at least one method should be annotated with OperationContract. Similarly, WCF only serves OperationContract methods that are defined inside ServiceContract classes or interfaces; thus, this rule also checks that ServiceContract is added to the containing type of OperationContract methods.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3597",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4035": {
          "id": "S4035",
          "shortDescription": "Classes implementing \"IEquatable<T>\" should be sealed",
          "fullDescription": "When a class implements the IEquatable<T> interface, it enters a contract that, in effect, states \"I know how to compare two instances of type T or any type derived from T for equality.\". However if that class is derived, it is very unlikely that the base class will know how to make a meaningful comparison. Therefore that implicit contract is now broken.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4035",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}